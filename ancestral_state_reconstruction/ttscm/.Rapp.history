setwd("~/Documents/GitHub/Cypridinid_phylogeny/ancestral_state_reconstruction/ttscm/")#
require(ape);#
library(phytools)#
library(ggplot2)#
source(file="chronofunctions1.0.R")#
read.nexus(file="../../mb_clock.tre") -> consensus#
read.nexus(file="../../mcmctrees.tre") -> mcmc#
#
data.frame(read.csv(file="character_states.csv", header=FALSE), row.names=TRUE) -> chars#
names(chars) <- c("biolum", "court")#
biolum <-chars$biolum#
names(biolum) <- row.names(chars)#
#
#Plot tree to check character states#
plotTree(mcmc[[4500]],fsize=0.8,ftype="i")#
cols<-setNames(palette()[1:length(unique(biolum))],sort(unique(biolum)))#
tiplabels(pie=to.matrix(biolum,sort(unique(biolum))),piecol=cols,cex=0.3)#
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],#
    y=-max(nodeHeights(tree)),fsize=0.8)#
#Set up character states#
#
rm(changedata)#
rm(countdata)#
firsttimethru <- 1#
for(i in 4500:4510) {#
 print("calculating tree:")#
 print(i)#
#
simulation <- make.simmap(mcmc[[i]], biolum, model="SYM", nsim=100)#
	treedepth <- rootdepth(simulation[[1]])#
	print("  Tree Depth")#
	print(treedepth)#
#
if(firsttimethru==1){#
					changedata<-chronoSimmap(simulation, rev.order=TRUE,treedepth)#
					countdata<-countLineages(simulation, treedepth)#
					firsttimethru <- 2#
				}else{#
 					changedata <- rbind(changedata,chronoSimmap(simulation, rev.order=TRUE,treedepth))#
 					countdata <- rbind(countdata,countLineages(simulation,treedepth))#
 				}#
#
}#
branchtimehist <-hist(countdata$NewBranchTime) #
cumhist<-branchtimehist #
bth <- branchtimehist$counts#
#make cumulative distribution for branches. This will be the denominator for changes/branch. #
#***************** first, reverse order of branch times.#
revbth <- rev(bth)#
#next calculate cumulative sum to yield (backwards) total # of branches per bin.#
crevbth <- cumsum(revbth)#
#Now reverse the order to have yougest first, oldest last#
cdist <- rev(crevbth) cumhist$counts <- cdist#
#Not using density or intensity cumhist$density <- #
#max(cumsum(branchtimehist$density))-cumsum(branchtimehist$density)+.1 cumhist$intensities <- #
#cumsum(branchtimehist$intensity)#
changedatahist <- hist(changedata$BeforePresent, breaks=cumhist$breaks)
read.nexus(file="../../mcmctrees.tre") -> mcmc
setwd("~/Documents/GitHub/Cypridinid_phylogeny/ancestral_state_reconstruction/ttscm/")
setwd("~/Documents/GitHub/Cypridinidae_phylogeny/ancestral_state_reconstruction/ttscm/")
source(file="chronofunctions1.0.R")
read.nexus(file="../../mb_clock.tre") -> consensus
read.nexus(file="../../mcmctrees.tre") -> mcmc
#desktop#
setwd("~/Documents/GitHub/Cypridinidae_phylogeny/ancestral_state_reconstruction/ttscm/")#
#
require(ape);#
library(phytools)#
library(ggplot2)#
source(file="chronofunctions1.0.R")#
read.nexus(file="../../mb_clock.tre") -> consensus#
read.nexus(file="../../mcmctrees.tre") -> mcmc#
#
data.frame(read.csv(file="character_states.csv", header=FALSE), row.names=TRUE) -> chars#
names(chars) <- c("biolum", "court")#
biolum <-chars$biolum#
names(biolum) <- row.names(chars)#
#
#Plot tree to check character states#
plotTree(mcmc[[4500]],fsize=0.8,ftype="i")#
cols<-setNames(palette()[1:length(unique(biolum))],sort(unique(biolum)))#
tiplabels(pie=to.matrix(biolum,sort(unique(biolum))),piecol=cols,cex=0.3)#
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],#
    y=-max(nodeHeights(tree)),fsize=0.8)#
#Set up character states#
#
rm(changedata)#
rm(countdata)#
firsttimethru <- 1#
for(i in 4500:4510) {#
 print("calculating tree:")#
 print(i)#
#
simulation <- make.simmap(mcmc[[i]], biolum, model="SYM", nsim=100)#
	treedepth <- rootdepth(simulation[[1]])#
	print("  Tree Depth")#
	print(treedepth)#
#
if(firsttimethru==1){#
					changedata<-chronoSimmap(simulation, rev.order=TRUE,treedepth)#
					countdata<-countLineages(simulation, treedepth)#
					firsttimethru <- 2#
				}else{#
 					changedata <- rbind(changedata,chronoSimmap(simulation, rev.order=TRUE,treedepth))#
 					countdata <- rbind(countdata,countLineages(simulation,treedepth))#
 				}#
#
}#
branchtimehist <-hist(countdata$NewBranchTime) #
cumhist<-branchtimehist #
bth <- branchtimehist$counts#
#make cumulative distribution for branches. This will be the denominator for changes/branch. #
#***************** first, reverse order of branch times.#
revbth <- rev(bth)#
#next calculate cumulative sum to yield (backwards) total # of branches per bin.#
crevbth <- cumsum(revbth)#
#Now reverse the order to have yougest first, oldest last#
cdist <- rev(crevbth) cumhist$counts <- cdist#
#Not using density or intensity cumhist$density <- #
#max(cumsum(branchtimehist$density))-cumsum(branchtimehist$density)+.1 cumhist$intensities <- #
#cumsum(branchtimehist$intensity)#
changedatahist <- hist(changedata$BeforePresent, breaks=cumhist$breaks)
use(phytools)
require(phytools)
install.packages("phytools")
require(phytools)
install.packages("phangorn")
install.packages("ape")
quit
quit()
install.packages("phangorn",repos="https://cloud.r-project.org",quiet=TRUE)
install.packages("phangorn",repos="https://cloud.r-project.org",quiet=TRUE)
require("phangorn")
install.packages("phytools",repos="https://cloud.r-project.org",quiet=TRUE)
require(phytools)#
#laptop#
setwd("~/Documents/GitHub/Cypridinid_phylogeny/ancestral_state_reconstruction/ttscm/")#
#desktop#
setwd("~/Documents/GitHub/Cypridinidae_phylogeny/ancestral_state_reconstruction/ttscm/")#
#
require(ape);#
library(phytools)#
library(ggplot2)#
source(file="chronofunctions1.0.R")#
read.nexus(file="../../mb_clock.tre") -> consensus#
read.nexus(file="../../mcmctrees.tre") -> mcmc#
#
data.frame(read.csv(file="character_states.csv", header=FALSE), row.names=TRUE) -> chars#
names(chars) <- c("biolum", "court")#
biolum <-chars$biolum#
names(biolum) <- row.names(chars)#
#
#Plot tree to check character states#
plotTree(mcmc[[4500]],fsize=0.8,ftype="i")#
cols<-setNames(palette()[1:length(unique(biolum))],sort(unique(biolum)))#
tiplabels(pie=to.matrix(biolum,sort(unique(biolum))),piecol=cols,cex=0.3)#
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],#
    y=-max(nodeHeights(tree)),fsize=0.8)#
#Set up character states#
#
rm(changedata)#
rm(countdata)#
firsttimethru <- 1#
for(i in 4500:4510) {#
 print("calculating tree:")#
 print(i)#
#
simulation <- make.simmap(mcmc[[i]], biolum, model="SYM", nsim=100)#
	treedepth <- rootdepth(simulation[[1]])#
	print("  Tree Depth")#
	print(treedepth)#
#
if(firsttimethru==1){#
					changedata<-chronoSimmap(simulation, rev.order=TRUE,treedepth)#
					countdata<-countLineages(simulation, treedepth)#
					firsttimethru <- 2#
				}else{#
 					changedata <- rbind(changedata,chronoSimmap(simulation, rev.order=TRUE,treedepth))#
 					countdata <- rbind(countdata,countLineages(simulation,treedepth))#
 				}#
#
}#
branchtimehist <-hist(countdata$NewBranchTime) #
cumhist<-branchtimehist #
bth <- branchtimehist$counts#
#make cumulative distribution for branches. This will be the denominator for changes/branch. #
#***************** first, reverse order of branch times.#
revbth <- rev(bth)#
#next calculate cumulative sum to yield (backwards) total # of branches per bin.#
crevbth <- cumsum(revbth)#
#Now reverse the order to have yougest first, oldest last#
cdist <- rev(crevbth) cumhist$counts <- cdist#
#Not using density or intensity cumhist$density <- #
#max(cumsum(branchtimehist$density))-cumsum(branchtimehist$density)+.1 cumhist$intensities <- #
#cumsum(branchtimehist$intensity)#
changedatahist <- hist(changedata$BeforePresent, breaks=cumhist$breaks)
