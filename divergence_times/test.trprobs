#NEXUS
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 AllBzSVU,
    2 AllBzVAD,
    3 AllRoDU,
    4 AllRoRD,
    5 AltLiz,
    6 BothGPH,
    7 BothJaLSZZ,
    8 BothJaOBD,
    9 BothJaSVD,
   10 BothJaVAD,
   11 BothPmorini,
   12 BothRoCMU,
   13 BothRoODH,
   14 BothSVD,
   15 BothVhilg_shim,
   16 Chlorica,
   17 Cylindroleberidinae,
   18 Dstev_ENA,
   19 EGD_Niko,
   20 FatWhiteEye,
   21 Gigantocypris,
   22 GlovSkog,
   23 Gruber_Pannecohenae,
   24 JaAU_S56,
   25 JaWLU_S67,
   26 JaWTF_S54,
   27 Korn_hast_c,
   28 LIRSCyp1,
   29 LIRSCyp2,
   30 LongWhiteEye,
   31 NOL_Niko,
   32 PMMFU,
   33 PSKO,
   34 RO_AG_S10,
   35 RoIR_S66,
   36 SFM_Niko,
   37 Vhilg,
   38 Vtsu,
   39 WhiteVanessaLIRS,
   40 curacao,
   41 jpcyp2b;
   tree tree_1 [p = 0.830, P = 0.830] = [&W 0.830246] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,((23,(36,(31,19))),6)),((38,32),(((35,34),1),((8,(4,3)),(13,(((24,10),7),(((26,25),9),(14,2)))))))))))))));
   tree tree_2 [p = 0.085, P = 0.915] = [&W 0.084877] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,(((36,23),(31,19)),6)),((38,32),(((35,34),1),((8,(4,3)),(13,(((24,10),7),(((26,25),9),(14,2)))))))))))))));
   tree tree_3 [p = 0.047, P = 0.962] = [&W 0.046747] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,((23,(36,(31,19))),6)),((38,32),(((35,34),1),((8,(4,3)),((13,((24,10),7)),(((26,25),9),(14,2))))))))))))));
   tree tree_4 [p = 0.019, P = 0.981] = [&W 0.019388] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,((23,(36,(31,19))),6)),((38,32),(((35,34),1),((8,(4,3)),(13,((10,(24,7)),(((26,25),9),(14,2)))))))))))))));
   tree tree_5 [p = 0.009, P = 0.991] = [&W 0.009479] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,((23,(36,(31,19))),6)),((38,32),(((35,34),1),((8,(4,3)),(13,((24,(10,7)),(((26,25),9),(14,2)))))))))))))));
   tree tree_6 [p = 0.003, P = 0.994] = [&W 0.003447] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,(((36,23),(31,19)),6)),((38,32),(((35,34),1),((8,(4,3)),(13,((24,(10,7)),(((26,25),9),(14,2)))))))))))))));
   tree tree_7 [p = 0.002, P = 0.996] = [&W 0.002154] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,(((36,23),(31,19)),6)),((38,32),(((35,34),1),((8,(4,3)),((13,((24,10),7)),(((26,25),9),(14,2))))))))))))));
   tree tree_8 [p = 0.002, P = 0.998] = [&W 0.001939] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,(((36,23),(31,19)),6)),((38,32),(((35,34),1),((8,(4,3)),(13,((10,(24,7)),(((26,25),9),(14,2)))))))))))))));
   tree tree_9 [p = 0.001, P = 0.999] = [&W 0.000862] (18,((17,(16,5)),(((33,22),(30,(39,20))),((41,21),((29,(28,(37,15))),((40,(27,12)),((11,((23,(36,(31,19))),6)),((38,32),(((35,34),1),((8,(4,3)),(13,(((24,10),7),(((26,25),9),(14,2))))))))))))));
   tree tree_10 [p = 0.000, P = 1.000] = [&W 0.000431] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,((36,(23,(31,19))),6)),((38,32),(((35,34),1),((8,(4,3)),(13,(((24,10),7),(((26,25),9),(14,2)))))))))))))));
   tree tree_11 [p = 0.000, P = 1.000] = [&W 0.000215] (18,((17,(16,5)),(((33,22),(30,(39,20))),((41,21),((29,(28,(37,15))),((40,(27,12)),((11,(((36,23),(31,19)),6)),((38,32),(((35,34),1),((8,(4,3)),(13,(((24,10),7),(((26,25),9),(14,2))))))))))))));
   tree tree_12 [p = 0.000, P = 1.000] = [&W 0.000215] (18,((17,(16,5)),(((33,22),(30,(39,20))),(21,(41,((29,(28,(37,15))),((40,(27,12)),((11,(((36,23),(31,19)),6)),((38,32),(((35,34),1),((8,(4,3)),((13,(24,(10,7))),(((26,25),9),(14,2))))))))))))));
end;
