#NEXUS
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 AllBzSVU,
    2 AllBzVAD,
    3 AllRoDU,
    4 AllRoRD,
    5 Allmacelroy,
    6 AltLiz,
    7 BothGPH,
    8 BothJaLSZZ,
    9 BothJaOBD,
   10 BothJaSVD,
   11 BothJaVAD,
   12 BothMSH,
   13 BothPara_w,
   14 BothPmorini,
   15 BothRoCMU,
   16 BothRoODH,
   17 BothSVD,
   18 BothVhilg_shim,
   19 Chlorica,
   20 Cylindroleberidinae,
   21 Dstev_ENA,
   22 EGD_Niko,
   23 Euph_microasciformis,
   24 FatWhiteEye,
   25 Gigantocypris,
   26 GlovSkog,
   27 Gruber_Pannecohenae,
   28 Harb_slatteryi,
   29 JaAU_S56,
   30 JaWLU_S67,
   31 JaWTF_S54,
   32 Jp_Melavar22,
   33 Korn_hast_c,
   34 LIRSCyp1,
   35 LIRSCyp2,
   36 LongWhiteEye,
   37 NOL_Niko,
   38 PMMFU,
   39 PSKO,
   40 RO_AG_S10,
   41 ROWLU_2018,
   42 RoIR_S66,
   43 SFM_Niko,
   44 Vhilg,
   45 Vtsu,
   46 WhiteVanessaLIRS,
   47 curacao,
   48 jpcyp2b;
   tree tree_1 [p = 0.370, P = 0.370] = [&W 0.370452] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
   tree tree_2 [p = 0.122, P = 0.492] = [&W 0.121951] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
   tree tree_3 [p = 0.103, P = 0.595] = [&W 0.102559] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(43,(37,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
   tree tree_4 [p = 0.102, P = 0.697] = [&W 0.101759] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2)))))))))))))));
   tree tree_5 [p = 0.066, P = 0.763] = [&W 0.065974] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),(((31,30),10),((16,((29,11),8)),(17,2))))))))))))));
   tree tree_6 [p = 0.039, P = 0.801] = [&W 0.038784] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(37,(43,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
   tree tree_7 [p = 0.034, P = 0.835] = [&W 0.033587] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2)))))))))))))));
   tree tree_8 [p = 0.031, P = 0.866] = [&W 0.030988] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(43,(37,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2)))))))))))))));
   tree tree_9 [p = 0.027, P = 0.893] = [&W 0.026989] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),(((31,30),10),((16,((29,11),8)),(17,2))))))))))))));
   tree tree_10 [p = 0.022, P = 0.915] = [&W 0.021991] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((27,(43,(37,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
   tree tree_11 [p = 0.017, P = 0.932] = [&W 0.016593] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(43,(37,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(((31,30),10),((16,((29,11),8)),(17,2))))))))))))));
   tree tree_12 [p = 0.015, P = 0.947] = [&W 0.015194] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(37,(43,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2)))))))))))))));
   tree tree_13 [p = 0.008, P = 0.954] = [&W 0.007597] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((27,(37,(43,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
   tree tree_14 [p = 0.007, P = 0.961] = [&W 0.006797] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((27,(43,(37,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2)))))))))))))));
   tree tree_15 [p = 0.006, P = 0.967] = [&W 0.005598] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2)))))))))))));
   tree tree_16 [p = 0.005, P = 0.972] = [&W 0.005198] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),((16,(12,(9,(4,3)))),(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_17 [p = 0.005, P = 0.977] = [&W 0.004798] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_18 [p = 0.004, P = 0.981] = [&W 0.004198] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((27,(43,(37,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(((31,30),10),((16,((29,11),8)),(17,2))))))))))))));
   tree tree_19 [p = 0.003, P = 0.984] = [&W 0.002999] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_20 [p = 0.003, P = 0.987] = [&W 0.002999] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),((16,(12,(9,(4,3)))),(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_21 [p = 0.002, P = 0.989] = [&W 0.002399] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(37,(43,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(((31,30),10),((16,((29,11),8)),(17,2))))))))))))));
   tree tree_22 [p = 0.002, P = 0.991] = [&W 0.001999] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(43,(37,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2)))))))))))));
   tree tree_23 [p = 0.002, P = 0.993] = [&W 0.001799] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((27,(37,(43,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(((31,30),10),((16,((29,11),8)),(17,2))))))))))))));
   tree tree_24 [p = 0.002, P = 0.995] = [&W 0.001599] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),((((27,(37,(43,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_25 [p = 0.001, P = 0.996] = [&W 0.001399] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(43,(37,22))),7)),5),((45,38),(((42,40),1),(((16,((29,11),8)),(12,(9,(4,3)))),(((31,30),10),(17,2)))))))))))));
   tree tree_26 [p = 0.001, P = 0.997] = [&W 0.001000] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(43,(37,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,((((31,30),10),((29,11),8)),(17,2))))))))))))));
   tree tree_27 [p = 0.001, P = 0.998] = [&W 0.001000] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((27,(37,(43,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2)))))))))))))));
   tree tree_28 [p = 0.001, P = 0.999] = [&W 0.000800] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),((((27,(43,(37,22))),7),((41,14),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_29 [p = 0.000, P = 0.999] = [&W 0.000400] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2)))))))))))));
   tree tree_30 [p = 0.000, P = 1.000] = [&W 0.000200] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),((((41,14),((27,(37,(43,22))),7)),5),((45,38),(((42,40),1),(((16,((29,11),8)),(12,(9,(4,3)))),(((31,30),10),(17,2)))))))))))));
   tree tree_31 [p = 0.000, P = 1.000] = [&W 0.000200] (21,((20,(((28,23),19),6)),((25,(((39,26),(36,(46,24))),(32,13))),(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((27,(43,(37,22))),7),5)),((45,38),(((42,40),1),((12,(9,(4,3))),(16,(((29,11),8),(((31,30),10),(17,2))))))))))))));
   tree tree_32 [p = 0.000, P = 1.000] = [&W 0.000200] (21,((20,(((28,23),19),6)),((((39,26),(36,(46,24))),(32,13)),(25,(48,((35,(34,(44,18))),((47,(33,15)),(((41,14),(((37,(43,22)),(27,7)),5)),((45,38),(((42,40),1),((12,(9,(4,3))),((16,((29,11),8)),(((31,30),10),(17,2))))))))))))));
end;
